[{"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/index.js":"1","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/features/Greedy/greedySlice.js":"2","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/reportWebVitals.js":"3","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/Header/index.jsx":"4","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/NotFound/index.jsx":"5","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/features/Greedy/pages/Main/index.jsx":"6","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/Sort/index.jsx":"7","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/SolveBbTable/index.jsx":"8","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/QuaVaForm/index.jsx":"9","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/SolveGrTable/index.jsx":"10","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/Layout/index.jsx":"11","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/Banner/index.jsx":"12","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/features/Greedy/components/SolveBag/index.jsx":"13","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/features/Greedy/sortItemSlice.js":"14","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/features/Greedy/index.jsx":"15","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/CreateTable/index.jsx":"16","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/AddItemForm/index.jsx":"17","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/LoadFileForm/index.jsx":"18","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/ShowResultForm/index.jsx":"19","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/constants/global.js":"20","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/CreateTable/List/index.jsx":"21","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/SolveGrTable/SolveList/index.jsx":"22","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/SolveBbTable/SolveList/index.jsx":"23","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/custom-fields/SelectField/index.jsx":"24","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/custom-fields/LoadFileField/index.jsx":"25","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/custom-fields/InputField/index.jsx":"26","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/features/Greedy/itemSlice.js":"27","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/custom-fields/AddInputField/index.jsx":"28"},{"size":651,"mtime":1615556416291,"results":"29","hashOfConfig":"30"},{"size":1195,"mtime":1608958208401,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1607739845963,"results":"32","hashOfConfig":"30"},{"size":2327,"mtime":1608699209418,"results":"33","hashOfConfig":"30"},{"size":193,"mtime":1608698961824,"results":"34","hashOfConfig":"30"},{"size":9759,"mtime":1608999309667,"results":"35","hashOfConfig":"30"},{"size":1389,"mtime":1609088427693,"results":"36","hashOfConfig":"30"},{"size":864,"mtime":1608955980180,"results":"37","hashOfConfig":"30"},{"size":2729,"mtime":1615556961660,"results":"38","hashOfConfig":"30"},{"size":855,"mtime":1615557085045,"results":"39","hashOfConfig":"30"},{"size":222,"mtime":1615556913756,"results":"40","hashOfConfig":"30"},{"size":626,"mtime":1608093244186,"results":"41","hashOfConfig":"30"},{"size":2987,"mtime":1609131792625,"results":"42","hashOfConfig":"30"},{"size":2111,"mtime":1608956257744,"results":"43","hashOfConfig":"30"},{"size":445,"mtime":1608699899716,"results":"44","hashOfConfig":"30"},{"size":910,"mtime":1615556720819,"results":"45","hashOfConfig":"30"},{"size":4767,"mtime":1615556613108,"results":"46","hashOfConfig":"30"},{"size":1814,"mtime":1608957504824,"results":"47","hashOfConfig":"30"},{"size":2343,"mtime":1609079777601,"results":"48","hashOfConfig":"30"},{"size":274,"mtime":1608953123381,"results":"49","hashOfConfig":"30"},{"size":1119,"mtime":1608699229527,"results":"50","hashOfConfig":"30"},{"size":1561,"mtime":1608956038039,"results":"51","hashOfConfig":"30"},{"size":1560,"mtime":1615557013586,"results":"52","hashOfConfig":"30"},{"size":1965,"mtime":1608698893175,"results":"53","hashOfConfig":"30"},{"size":1623,"mtime":1608698885249,"results":"54","hashOfConfig":"30"},{"size":1585,"mtime":1608698876305,"results":"55","hashOfConfig":"30"},{"size":347,"mtime":1608358759140,"results":"56","hashOfConfig":"30"},{"size":1597,"mtime":1608698868364,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"leaqa",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"73"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"73"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/index.js",[],["120","121"],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/features/Greedy/greedySlice.js",["122"],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/reportWebVitals.js",[],["123","124"],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/Header/index.jsx",[],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/NotFound/index.jsx",[],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/features/Greedy/pages/Main/index.jsx",["125","126"],"import AddItemForm from 'components/AddItemForm';\r\nimport Banner from 'components/Banner';\r\nimport CreateTable from 'components/CreateTable';\r\nimport Layout from 'components/Layout';\r\nimport LoadFileForm from 'components/LoadFileForm';\r\nimport QuaVaForm from 'components/QuaVaForm';\r\nimport ShowResultForm from 'components/ShowResultForm';\r\nimport SolveGrTable from 'components/SolveGrTable';\r\nimport SolveBbTable from 'components/SolveBbTable';\r\nimport Sort from 'components/Sort';\r\nimport SolveBag from 'features/Greedy/components/SolveBag';\r\nimport { addSession, checkBag3, setBb, setGr, setNotSort } from 'features/Greedy/greedySlice';\r\nimport { addItem } from 'features/Greedy/itemSlice';\r\nimport { addSortItem, setGrLastW, setBbLastW } from 'features/Greedy/sortItemSlice';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Col, Label, Row } from 'reactstrap';\r\nimport \"./index.scss\";\r\n\r\nMainPage.propTypes = {};\r\n\r\nfunction MainPage(props) {\r\n    const dispatch = useDispatch();\r\n    const items = useSelector(state =>  state.items);\r\n    const grLastW = useSelector(state => state.sortItem.grLastW);\r\n    const bbLastW = useSelector(state => state.sortItem.bbLastW);\r\n    const GLNTT = useSelector(state => state.sortItem.GLNTT)\r\n    const grTGT = useSelector(state => state.sortItem.grTGT);\r\n    const bbTGT = useSelector(state => state.sortItem.bbTGT);\r\n    const isBb = useSelector(state => state.session.isBb);\r\n    const isGr = useSelector(state => state.session.isGr);\r\n    const isBag3 = useSelector(state => state.session.isBag3);\r\n    const isByHand = useSelector(state => state.session.isByHand)\r\n    const session = useSelector( state => state.session.session );\r\n    const sortItem = useSelector( state => state.sortItem.sortItem);\r\n    const sortComplete = useSelector( state => state.sortItem.isSort );\r\n    const solveComplete = useSelector(state => state.sortItem.isSolve);\r\n    const isNotSort = useSelector(state => state.session.isNotSort);\r\n    const rootWeight = useSelector(state => state.session.session.weight);\r\n    \r\n\r\n    let quantity = null;\r\n    let weight = null;\r\n    let key = 0;\r\n\r\n    function handleLoadFileForm(values){\r\n        let listItem;\r\n        if( localStorage.length > 0 ){\r\n            listItem = JSON.parse(localStorage.getItem(`session${localStorage.length-1}`))\r\n            console.log(listItem.items,listItem.session);\r\n        \r\n            let previousSession = {\r\n                key: listItem.session.key,\r\n                session: listItem.session.session,\r\n                weight: listItem.session.weight,\r\n                quantity: listItem.session.quantity\r\n            }\r\n    \r\n            let previousAction = addSession(previousSession);\r\n            dispatch(previousAction);\r\n        }\r\n\r\n        const reader = new FileReader();\r\n        reader.onload = function () {\r\n            const lines = reader.result.split('\\n')\r\n            let numOfSession = session.length;\r\n\r\n            let tempSession = lines[0].split(' ');\r\n            let weight = Number(tempSession[1])\r\n            let mainSession = {\r\n                key: session.length,\r\n                session: session.length,\r\n                quantity: Number(tempSession[0]),\r\n                weight: weight\r\n            }\r\n            let sessionAction = addSession(mainSession);\r\n            dispatch(sessionAction);\r\n\r\n            let lastWAction = setGrLastW(Number(tempSession[1]));\r\n            dispatch(lastWAction);\r\n            let lastWAction1 = setBbLastW(Number(tempSession[1]));\r\n            dispatch(lastWAction1);\r\n\r\n            let tempItem = lines.slice(1);\r\n            let t = tempItem.map((line,index) => {\r\n                let temp = line.split(' ');\r\n                let n = temp.length;\r\n                let name = temp.slice(0,n-3);\r\n                let valuesChange = {\r\n                    itemName: name.join(' '),\r\n                    itemAmount: Number(temp[n-3]),\r\n                    itemValue: Number(temp[n-2]),\r\n                    itemWeight: Number(temp[n-1]),\r\n                    itemUnit: Number(temp[n-2])/ Number(temp[n-1]),\r\n                    grResult: 0,\r\n                    bbResult: 0,\r\n                    key: index,\r\n                    ofSession: numOfSession,\r\n                }\r\n                const action = addItem(valuesChange);\r\n                const actionSort = addSortItem(valuesChange);\r\n                dispatch(action);\r\n                dispatch(actionSort);\r\n            })\r\n\r\n        }\r\n        reader.readAsText(values.thing);\r\n\r\n        let actionNotSort = setNotSort(true);\r\n        dispatch(actionNotSort);\r\n    }\r\n    \r\n    function handleQuavaSubmit(values){\r\n        let valuesChange = {...values}\r\n        valuesChange.quantity = Number(valuesChange.quantity);\r\n        valuesChange.weight = Number(valuesChange.weight);\r\n\r\n        if( session.length > 0 ){\r\n            key = session[session.length-1].session + 1;\r\n        }\r\n        valuesChange.key = key;\r\n        valuesChange.session = key;\r\n        \r\n        let action = addSession(valuesChange);\r\n        dispatch(action);\r\n\r\n        let tempAction = setGrLastW(valuesChange.weight);\r\n        dispatch(tempAction);\r\n        \r\n        let checkBagAction\r\n        if( valuesChange.subjectId === 2 ) {\r\n            checkBagAction = checkBag3(true);\r\n            dispatch(checkBagAction);\r\n        };\r\n    }\r\n\r\n    function handleAddItemSubmit(values){\r\n        let valuesChange = {...values}\r\n        valuesChange.itemAmount = Number(valuesChange.itemAmount);\r\n        valuesChange.itemWeight = Number(valuesChange.itemWeight);\r\n        valuesChange.itemValue = Number(valuesChange.itemValue);\r\n        valuesChange.grResult = 0;\r\n        valuesChange.bbResult = 0;\r\n        valuesChange.ofSession = key;\r\n        valuesChange.Key = items.length\r\n        if(session.length > 0){\r\n            valuesChange.weight = rootWeight;\r\n        }\r\n         \r\n        \r\n        if( session.length > 0 ){\r\n            key = session[session.length-1].session;\r\n        };\r\n\r\n        const action = addItem(valuesChange);\r\n        const actionSort = addSortItem(valuesChange);\r\n        dispatch(action);\r\n        dispatch(actionSort);\r\n    }\r\n\r\n    function handleShowResultForm(values){\r\n        if( values.algorithmId === 1 ){\r\n            let action1 = setGr(true);\r\n            let action2 = setBb(false);\r\n            dispatch(action1);\r\n            dispatch(action2);\r\n        } else if( values.algorithmId === 2 ){\r\n            let action1 = setGr(false);\r\n            let action2 = setBb(true);\r\n            dispatch(action1);\r\n            dispatch(action2);\r\n        } else if( values.algorithmId === 3 ){\r\n            let action1 = setGr(true);\r\n            let action2 = setBb(true);\r\n            dispatch(action1);\r\n            dispatch(action2);\r\n        }\r\n    }\r\n\r\n    if(session.length > 0){\r\n        quantity = session[0].quantity;\r\n        weight = session[0].weight;\r\n    }\r\n\r\n    if( items.length === quantity && isByHand ){\r\n        let actionNotSort = setNotSort(true);\r\n        dispatch(actionNotSort);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Banner title=\"\" />\r\n\r\n            <Layout>\r\n                <Row className=\"padding\">\r\n                    <Col \r\n                        sm={{ size: '2' }}\r\n                        className=\"inputLeft\" \r\n                    >\r\n                        { !isByHand && !sortComplete && <Label className=\"loadfile\">Enter your file: </Label> }\r\n                        { !isByHand && !sortComplete && <LoadFileForm onSubmit={handleLoadFileForm} /> }\r\n                        { isByHand && !sortComplete && <QuaVaForm onSubmit={handleQuavaSubmit} />}\r\n                    </Col>\r\n                    <Col sm={{ size: 7 }}>\r\n                        { !sortComplete && <Label className=\"label\">Table with User's input Values:</Label> }\r\n                        { sortComplete && <Label className=\"label\">Table with Values was Sorted:</Label> }\r\n                        { !sortComplete && <CreateTable Items={items} />}\r\n                        { sortComplete && <CreateTable Items={sortItem} />}\r\n                        { !solveComplete && \"-------------------------------------------------------------------------------------------------------------------------------------\" }\r\n                        <Row>\r\n                            <Col>\r\n                                { !solveComplete && isGr && <Label className=\"loadfile\">Greedy Result: </Label> }\r\n                                { !solveComplete && isGr && <SolveGrTable items={sortItem} lastW={grLastW} weight={weight} tgt={grTGT} /> }\r\n                            </Col>\r\n                            <Col>\r\n                                { !solveComplete && isBb && <Label className=\"loadfile\">BrandAndBound Result: </Label> }\r\n                                { !solveComplete && isBb && <SolveBbTable items={sortItem} lastW={bbLastW} weight={weight} tgt={bbTGT} /> }\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col>\r\n                        { (items.length < quantity)  && <AddItemForm isBag3={isBag3} onSubmit={handleAddItemSubmit} /> }\r\n                        { isNotSort && !sortComplete && <Sort sortItem={sortItem} dispatch={dispatch} /> }\r\n                        { solveComplete && sortComplete && <SolveBag sortItem={sortItem} weight={weight} GLNTT={GLNTT} dispatch={dispatch} /> }\r\n                        { !solveComplete && <ShowResultForm items={items} session={session} onSubmit={handleShowResultForm} /> }\r\n                    </Col>\r\n                </Row>\r\n            </Layout>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage\r\n",["127","128"],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/Sort/index.jsx",[],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/SolveBbTable/index.jsx",["129"],"import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Button, Table } from 'reactstrap';\r\nimport './index.scss';\r\nimport SolveList from './SolveList';\r\n\r\nSolveTable.propTypes = {\r\n    title: PropTypes.string,\r\n}\r\n\r\nSolveTable.defaultProps = {\r\n    title: '',\r\n}\r\n\r\nfunction SolveTable(props) {\r\n    const { items, lastW, tgt, weight } = props;\r\n\r\n    return (\r\n        <div>\r\n            <Table striped responsive hover size=\"sm\"  >\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Item Name</th>\r\n                        <th className=\"textCenter\">Result</th>\r\n                    </tr>\r\n                </thead>\r\n                <SolveList Items={items} lastW={lastW} weight={weight} tgt={tgt} />\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SolveTable\r\n","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/QuaVaForm/index.jsx",["130"],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/SolveGrTable/index.jsx",[],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/Layout/index.jsx",[],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/Banner/index.jsx",[],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/features/Greedy/components/SolveBag/index.jsx",["131"],"import 'features/Greedy/pages/Main/index.scss';\r\nimport { setGrLastW, setBbLastW, setListResult, setGrResult, setGrTGT, setBbTGT, solveComplete } from 'features/Greedy/sortItemSlice';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nsolveBag.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n    sortItem: PropTypes.array,\r\n    W: PropTypes.number,\r\n}\r\n\r\nsolveBag.defaultProps = {\r\n    onSubmit: null,\r\n    items: [],\r\n    W: null,\r\n}\r\n\r\nfunction greedy(items, W, TGT, dispatch) {    \r\n    let lastW = W;\r\n    let tgt = TGT;\r\n\r\n    for( let i = 0; i < items.length; i++ ){\r\n        let result = Math.min( Math.floor(lastW/items[i].itemWeight),items[i].itemAmount);\r\n        let actionResult = setGrResult( [i,result] );\r\n        dispatch(actionResult);\r\n\r\n        lastW -= result * items[i].itemWeight;\r\n        let actionWeight = setGrLastW(lastW);\r\n        dispatch(actionWeight);\r\n        \r\n        tgt += result * items[i].itemValue;\r\n        let actionTGT = setGrTGT(tgt);\r\n        dispatch(actionTGT);\r\n    };\r\n}\r\n\r\nfunction bb(i, items, TGT, V, CT, GLNTT, x, dispatch) {\r\n    TGT = TGT;\r\n    let j;\r\n    for( j = Math.min( Math.floor(V/items[i].itemWeight),items[i].itemAmount ); j >= 0; j-- ){\r\n        \r\n        TGT += j * items[i].itemValue;\r\n        V -= j * items[i].itemWeight;\r\n        if( i < items.length - 1 ){\r\n            CT = TGT + V * items[i+1].itemUnit;\r\n        }\r\n        //console.log( TGT, V, CT, GLNTT, \"first\", j)\r\n        if( CT > GLNTT ){\r\n            let temp\r\n            x[i] = j;\r\n            if( (i === items.length-1) || (V === 0) ){\r\n                if( TGT > GLNTT ){\r\n                    GLNTT = TGT;\r\n                    //dispatch GLNTT & phuong an ngay tai day\r\n                    let action = setBbTGT(GLNTT);\r\n                    dispatch(action);\r\n\r\n                    let lastWAction = setBbLastW(V);\r\n                    dispatch(lastWAction);\r\n\r\n                    let listResultAction = setListResult(x);\r\n                    dispatch(listResultAction);\r\n                }\r\n            }else{\r\n                temp = bb(i+1, items, TGT, V, CT, GLNTT, x, dispatch);\r\n                GLNTT = temp;\r\n            }\r\n        }\r\n        x[i] = 0;\r\n        TGT -= j*items[i].itemValue;\r\n        V += j*items[i].itemWeight;\r\n    }\r\n    return GLNTT;\r\n}\r\n\r\nfunction solveBag(props) {\r\n    const { sortItem, dispatch, weight } = props;\r\n    let items = [...sortItem];\r\n    let TGT = 0;\r\n    let i=0;\r\n    let W = weight;\r\n    let x = [];\r\n    let V = weight\r\n    let CT = weight * items[0].itemUnit\r\n    let GLNTT = 0;\r\n    \r\n\r\n    //console.log(listItems, W);\r\n\r\n    return (\r\n        <div><Button className=\"button\" color=\"info\" onClick={() => {\r\n        bb(i, items, TGT, V, CT, GLNTT, x, dispatch)\r\n        greedy(items, W, TGT, dispatch)\r\n        let setSolve = solveComplete(false);\r\n        dispatch(setSolve);\r\n        } } >Solve</Button></div>\r\n    )\r\n}\r\n\r\nexport default solveBag\r\n","/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/features/Greedy/sortItemSlice.js",[],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/features/Greedy/index.jsx",[],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/CreateTable/index.jsx",[],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/AddItemForm/index.jsx",[],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/LoadFileForm/index.jsx",["132","133","134","135","136"],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/ShowResultForm/index.jsx",["137"],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/constants/global.js",[],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/CreateTable/List/index.jsx",[],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/SolveGrTable/SolveList/index.jsx",[],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/components/SolveBbTable/SolveList/index.jsx",[],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/custom-fields/SelectField/index.jsx",[],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/custom-fields/LoadFileField/index.jsx",[],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/custom-fields/InputField/index.jsx",[],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/features/Greedy/itemSlice.js",[],"/mnt/d/University Space/studySpace/AlgorithmSolvingProject/src/custom-fields/AddInputField/index.jsx",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":12,"column":9,"nodeType":"144","messageId":"145","endLine":12,"endColumn":15},{"ruleId":"138","replacedBy":"146"},{"ruleId":"140","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":85,"column":17,"nodeType":"150","messageId":"151","endLine":85,"endColumn":18},{"ruleId":"152","severity":1,"message":"153","line":85,"column":47,"nodeType":"154","messageId":"155","endLine":85,"endColumn":49},{"ruleId":"138","replacedBy":"156"},{"ruleId":"140","replacedBy":"157"},{"ruleId":"148","severity":1,"message":"158","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":16},{"ruleId":"148","severity":1,"message":"159","line":1,"column":10,"nodeType":"150","messageId":"151","endLine":1,"endColumn":27},{"ruleId":"160","severity":1,"message":"161","line":39,"column":11,"nodeType":"150","messageId":"162","endLine":39,"endColumn":14},{"ruleId":"148","severity":1,"message":"159","line":1,"column":10,"nodeType":"150","messageId":"151","endLine":1,"endColumn":27},{"ruleId":"148","severity":1,"message":"163","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":21},{"ruleId":"148","severity":1,"message":"164","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":19},{"ruleId":"148","severity":1,"message":"165","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":19},{"ruleId":"148","severity":1,"message":"166","line":36,"column":27,"nodeType":"150","messageId":"151","endLine":36,"endColumn":33},{"ruleId":"148","severity":1,"message":"167","line":9,"column":8,"nodeType":"150","messageId":"151","endLine":9,"endColumn":13},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-dupe-keys","Duplicate key 'isBoth'.","ObjectExpression","unexpected",["168"],["169"],"no-unused-vars","'t' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["168"],["169"],"'Button' is defined but never used.","'ALGORITHM_OPTIONS' is defined but never used.","no-self-assign","'TGT' is assigned to itself.","selfAssignment","'LoadFileField' is defined but never used.","'SelectField' is defined but never used.","'FastField' is defined but never used.","'values' is assigned a value but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]